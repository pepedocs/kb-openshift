{
  "openshift_components": {
    "core_kubernetes_control_plane": {
      "category": "Static Pods",
      "components": [
        {
          "name": "etcd-master-X",
          "description": "etcd database instances",
          "type": "pod"
        },
        {
          "name": "kube-apiserver-master-X",
          "description": "Kubernetes API server",
          "type": "pod"
        },
        {
          "name": "kube-controller-manager-master-X",
          "description": "Kubernetes controllers",
          "type": "pod"
        },
        {
          "name": "kube-scheduler-master-X",
          "description": "Pod scheduler",
          "type": "pod"
        }
      ]
    },
    "openshift_api_services": {
      "category": "Pods",
      "components": [
        {
          "name": "openshift-apiserver-X",
          "description": "OpenShift API extensions",
          "type": "pod"
        },
        {
          "name": "openshift-controller-manager-X",
          "description": "OpenShift controllers",
          "type": "pod"
        },
        {
          "name": "openshift-oauth-apiserver-X",
          "description": "OAuth API server",
          "type": "pod"
        }
      ]
    },
    "cluster_operators": {
      "category": "Pods",
      "components": [
        {
          "name": "cluster-version-operator",
          "description": "CVO pod",
          "type": "pod"
        },
        {
          "name": "cluster-config-operator",
          "description": "Config operator pod",
          "type": "pod"
        },
        {
          "name": "cluster-dns-operator",
          "description": "DNS operator pod",
          "type": "pod"
        },
        {
          "name": "cluster-ingress-operator",
          "description": "Ingress operator pod",
          "type": "pod"
        },
        {
          "name": "cluster-network-operator",
          "description": "Network operator pod",
          "type": "pod"
        },
        {
          "name": "cluster-storage-operator",
          "description": "Storage operator pod",
          "type": "pod"
        }
      ]
    },
    "networking_stack_openshift_sdn": {
      "category": "Networking Stack",
      "control_plane_pods": [
        {
          "name": "sdn-controller",
          "description": "SDN master controller",
          "type": "pod"
        }
      ],
      "node_pods": [
        {
          "name": "sdn",
          "description": "SDN node agent on each worker",
          "type": "daemonset"
        },
        {
          "name": "openvswitch",
          "description": "Open vSwitch daemon on each node",
          "type": "daemonset"
        },
        {
          "name": "ovs-node",
          "description": "OVS configuration pod",
          "type": "daemonset"
        }
      ]
    },
    "networking_stack_ovn_kubernetes": {
      "category": "Networking Stack",
      "control_plane_pods": [
        {
          "name": "ovnkube-master",
          "description": "OVN control plane",
          "type": "pod"
        },
        {
          "name": "ovn-dbserver-north",
          "description": "OVN northbound database",
          "type": "pod"
        },
        {
          "name": "ovn-dbserver-south",
          "description": "OVN southbound database",
          "type": "pod"
        }
      ],
      "node_pods": [
        {
          "name": "ovnkube-node",
          "description": "OVN node agent on each worker",
          "type": "daemonset"
        }
      ]
    },
    "dns_services": {
      "category": "Pods",
      "components": [
        {
          "name": "dns-default-X",
          "description": "CoreDNS pods",
          "type": "pod"
        },
        {
          "name": "node-resolver-X",
          "description": "Node-local DNS cache",
          "type": "daemonset"
        }
      ]
    },
    "ingress_routing": {
      "category": "Pods",
      "components": [
        {
          "name": "router-default-X",
          "description": "HAProxy router pods",
          "type": "pod"
        },
        {
          "name": "router-internal-default-X",
          "description": "Internal traffic router",
          "type": "pod"
        }
      ]
    },
    "authentication": {
      "category": "Pods",
      "components": [
        {
          "name": "oauth-openshift-X",
          "description": "OAuth server pods",
          "type": "pod"
        }
      ]
    },
    "image_registry": {
      "category": "Pods",
      "components": [
        {
          "name": "image-registry-X",
          "description": "Internal registry pods",
          "type": "pod"
        },
        {
          "name": "node-ca-X",
          "description": "Certificate authority pods",
          "type": "daemonset"
        }
      ]
    },
    "monitoring_stack": {
      "category": "Pods",
      "components": [
        {
          "name": "prometheus-k8s-X",
          "description": "Prometheus instances",
          "type": "pod"
        },
        {
          "name": "alertmanager-main-X",
          "description": "Alertmanager instances",
          "type": "pod"
        },
        {
          "name": "prometheus-operator",
          "description": "Prometheus operator",
          "type": "pod"
        },
        {
          "name": "prometheus-adapter",
          "description": "Metrics API adapter",
          "type": "pod"
        },
        {
          "name": "grafana",
          "description": "Grafana dashboard",
          "type": "pod"
        },
        {
          "name": "node-exporter-X",
          "description": "Node metrics",
          "type": "daemonset"
        },
        {
          "name": "kube-state-metrics",
          "description": "Kubernetes metrics",
          "type": "pod"
        }
      ]
    },
    "console": {
      "category": "Pods",
      "components": [
        {
          "name": "console-X",
          "description": "Web console pods",
          "type": "pod"
        },
        {
          "name": "downloads-X",
          "description": "CLI downloads service",
          "type": "pod"
        }
      ]
    },
    "machine_api": {
      "category": "Pods",
      "components": [
        {
          "name": "machine-api-operator",
          "description": "Machine management",
          "type": "pod"
        },
        {
          "name": "machine-api-controllers",
          "description": "Machine controllers",
          "type": "pod"
        },
        {
          "name": "cluster-autoscaler-operator",
          "description": "Autoscaler operator",
          "type": "pod"
        }
      ]
    },
    "machine_config": {
      "category": "Pods",
      "components": [
        {
          "name": "machine-config-operator",
          "description": "MCO operator pod",
          "type": "pod"
        },
        {
          "name": "machine-config-controller",
          "description": "Machine config controller",
          "type": "pod"
        },
        {
          "name": "machine-config-server",
          "description": "Serves ignition configs",
          "type": "pod"
        },
        {
          "name": "machine-config-daemon-X",
          "description": "MCD on each node",
          "type": "daemonset"
        }
      ]
    },
    "storage": {
      "category": "Pods",
      "components": [
        {
          "name": "csi-driver-X",
          "description": "Storage drivers (varies by provider)",
          "type": "pod"
        },
        {
          "name": "local-storage-operator",
          "description": "Local storage management",
          "type": "pod"
        }
      ]
    },
    "security": {
      "category": "Pods",
      "components": [
        {
          "name": "service-ca-X",
          "description": "Service certificate authority",
          "type": "pod"
        },
        {
          "name": "configmap-reloader-X",
          "description": "Certificate reloaders",
          "type": "pod"
        }
      ]
    },
    "node_level_host_processes": {
      "category": "systemd services",
      "core_node_services": [
        {
          "name": "kubelet",
          "description": "Node agent communicating with API server",
          "type": "systemd_service"
        },
        {
          "name": "crio",
          "description": "Container runtime interface",
          "type": "systemd_service"
        },
        {
          "name": "NetworkManager",
          "description": "Host network management",
          "type": "systemd_service"
        }
      ],
      "system_infrastructure": [
        {
          "name": "systemd",
          "description": "Init system and service manager",
          "type": "systemd_service"
        },
        {
          "name": "dbus",
          "description": "System message bus",
          "type": "systemd_service"
        },
        {
          "name": "chronyd",
          "description": "NTP time synchronization",
          "type": "systemd_service"
        },
        {
          "name": "rsyslog",
          "description": "System logging",
          "type": "systemd_service"
        }
      ],
      "storage_services": [
        {
          "name": "multipathd",
          "description": "Multipath device management",
          "type": "systemd_service"
        },
        {
          "name": "rpcbind",
          "description": "RPC port mapping service",
          "type": "systemd_service"
        },
        {
          "name": "iscsid",
          "description": "iSCSI initiator daemon (if using iSCSI)",
          "type": "systemd_service"
        }
      ],
      "security_services": [
        {
          "name": "sssd",
          "description": "System Security Services Daemon (for LDAP/AD)",
          "type": "systemd_service"
        },
        {
          "name": "firewalld",
          "description": "Host firewall management",
          "type": "systemd_service"
        }
      ],
      "hardware_device_management": [
        {
          "name": "udev",
          "description": "Device manager",
          "type": "systemd_service"
        },
        {
          "name": "tuned",
          "description": "System tuning daemon",
          "type": "systemd_service"
        }
      ]
    }
  },
  "notes": [
    "Some networking components like openvswitch may run as both host processes AND pods depending on the CNI configuration."
  ]
}